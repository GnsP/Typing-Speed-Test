ironscript.runPackage("{\"config\":{\"main\":\"./main.is\",\"imports\":[{\"name\":\"Jquery\",\"url\":\"./js/jquery.min.js\"}]},\"rootfs\":\"{\\\"type\\\":\\\"directory\\\",\\\"name\\\":\\\"root\\\",\\\"content\\\":[{\\\"type\\\":\\\"directory\\\",\\\"name\\\":\\\"include\\\",\\\"content\\\":[{\\\"type\\\":\\\"file\\\",\\\"name\\\":\\\"stdlib\\\",\\\"content\\\":\\\"_sync\\\\n  (_include \\\\\\\"_stdlib/operators\\\\\\\")\\\\n  (_include \\\\\\\"_stdlib/streams\\\\\\\")\\\\n\\\"},{\\\"type\\\":\\\"directory\\\",\\\"name\\\":\\\"_stdlib\\\",\\\"content\\\":[{\\\"type\\\":\\\"file\\\",\\\"name\\\":\\\"operators\\\",\\\"content\\\":\\\"; Copyright (c) 2016, Ganesh Prasad Sahoo <sir.gnsp@gmail.com>\\\\n \\\\n; IRONSCRIPT Standard Library (Operators.is)\\\\n; Implements the most used javascript operators for use in ironscript.\\\\n; Prefer _include at global-scope over _import in case of stdlib files.\\\\n\\\\n_sync\\\\n  \\\\n  (_def + @{ $return (args[0]+args[1]); }@ )\\\\n  (_def - @{ $return (args[0]-args[1]); }@ )\\\\n  (_def * @{ $return (args[0]*args[1]); }@ )\\\\n  (_def / @{ $return (args[0]/args[1]); }@ )\\\\n  (_def % @{ $return (args[0]%args[1]); }@ )\\\\n  \\\\n  (_def == @{ $return (args[0]==args[1]); }@ )\\\\n  (_def != @{ $return (args[0]!=args[1]); }@ )\\\\n  (_def === @{ $return (args[0]===args[1]); }@ )\\\\n  (_def !== @{ $return (args[0]!==args[1]); }@ )\\\\n\\\\n  (_def > @{ $return (args[0]>args[1]); }@ )\\\\n  (_def < @{ $return (args[0]<args[1]); }@ )\\\\n  (_def >= @{ $return (args[0]>=args[1]); }@ )\\\\n  (_def <= @{ $return (args[0]<=args[1]); }@ )\\\\n\\\\n  (_def && @{ $return (args[0]&&args[1]); }@ )\\\\n  (_def || @{ $return (args[0]||args[1]); }@ )\\\\n\\\\n  (_def concat @{ \\\\n    let s = '';\\\\n    for (let arg of args) s += arg;\\\\n    $return (s);\\\\n   }@ )\\\\n\\\\n  (_rho '(@a + @b) (+ @a @b))\\\\n  (_rho '(@a - @b) (- @a @b))\\\\n  (_rho '(@a * @b) (* @a @b))\\\\n  (_rho '(@a / @b) (/ @a @b))\\\\n  (_rho '(@a % @b) (% @a @b))\\\\n\\\\n  (_rho '(@a == @b) (== @a @b))\\\\n  (_rho '(@a != @b) (!= @a @b))\\\\n  (_rho '(@a === @b) (=== @a @b))\\\\n  (_rho '(@a !== @b) (!== @a @b))\\\\n  \\\\n  (_rho '(@a > @b) (> @a @b))\\\\n  (_rho '(@a < @b) (< @a @b))\\\\n  (_rho '(@a >= @b) (>= @a @b))\\\\n  (_rho '(@a <= @b) (<= @a @b))\\\\n  \\\\n  (_rho '(@a && @b) (&& @a @b))\\\\n  (_rho '(@a || @b) (|| @a @b))\\\\n\\\"},{\\\"type\\\":\\\"file\\\",\\\"name\\\":\\\"streams\\\",\\\"content\\\":\\\"; Copyright (c) 2016, Ganesh Prasad Sahoo <sir.gnsp@gmail.com>\\\\n \\\\n; IRONSCRIPT Standard Library (Streams.is)\\\\n; Implements some common stream modifiers and utility streams.\\\\n; Prefer _include at global-scope over _import in case of stdlib files.\\\\n\\\\n_sync\\\\n  (_include \\\\\\\"_stdlib/operators\\\\\\\")\\\\n\\\\n  (_def log-stream (_fn (stream stream-name) (_stream concat stream-name \\\\\\\" :: \\\\\\\" (stream) ) ) )\\\\n  (_def echo-stream (_fn (stream) (_stream _echo (stream) ) ) )\\\\n  (_rho '(debug log stream on console @s) (_do (echo-stream (_stream concat \\\\\\\"debug>>> \\\\\\\" ((log-stream @s @#s)) ) ) ) )\\\\n\\\\n  (_def count-stream (_fn (stream)\\\\n    (_stream\\\\n      \\\\n      (_begin\\\\n        (_def counter (_fn () \\\\n          (_begin\\\\n            (_def c 0)\\\\n            (_fn (x) \\\\n              (_if x \\\\n                (_assign! c (+ c 1) ) \\\\n                () \\\\n              ) \\\\n            )\\\\n          )             \\\\n        ) )\\\\n        (counter)\\\\n      )\\\\n\\\\n      (stream)\\\\n    )\\\\n  ) )\\\\n\\\\n  (_def max-stream (_fn (stream)\\\\n    (_stream\\\\n      \\\\n      (_begin\\\\n        (_def maxer (_fn () \\\\n          (_begin\\\\n            (_def m 0)\\\\n            (_fn (x) \\\\n              (_if (> x m) \\\\n                (_assign! m x ) \\\\n                m \\\\n              ) \\\\n            )\\\\n          )             \\\\n        ) )\\\\n        (maxer)\\\\n      )\\\\n\\\\n      (stream)\\\\n    )\\\\n  ) )\\\\n\\\"}]}]},{\\\"type\\\":\\\"directory\\\",\\\"name\\\":\\\"bundle\\\",\\\"content\\\":[{\\\"type\\\":\\\"file\\\",\\\"name\\\":\\\"main.is\\\",\\\"content\\\":\\\"_sync\\\\n  (_include \\\\\\\"stdlib\\\\\\\")\\\\n  \\\\n  (_def delay @{\\\\n    var wrapper = function () {\\\\n      var delay = args[0] || 1;\\\\n      var cache = [];\\\\n      for (var i=0; i<delay; i++) cache.push(null);\\\\n      \\\\n      var delayedStream = function (arg) {\\\\n        if (arg) {\\\\n          cache.push(arg);\\\\n          //console.log(cache);\\\\n          return cache.shift();\\\\n        }\\\\n      };\\\\n      return delayedStream;\\\\n    };\\\\n    $return(wrapper());\\\\n  }@ )\\\\n  (_def delay-stream (_fn (n stream) (_stream (_fx (delay n)) (stream) ) ) )\\\\n\\\\n\\\\n  (_def seconds @{\\\\n    var secs = args[0] || 1;\\\\n    setInterval(function(){$yield(1);}, secs*1000);\\\\n  }@ )\\\\n  \\\\n  (_def miliseconds @{\\\\n    var ms = args[0] || 1;\\\\n    setInterval(function(){$yield(1);}, ms);\\\\n  }@ )\\\\n  \\\\n\\\\n  (_def attach-event @{\\\\n      document.getElementById(args[0]).addEventListener(args[1], function (e) { $yield(e.key); });\\\\n  }@ )\\\\n\\\\n\\\\n  (_def speed-graph @{\\\\n    var l = document.createElement('li');\\\\n    var ht = 1;\\\\n    if (args[2]) ht = args[2]*5; \\\\n    l.style.height = \\\\\\\"\\\\\\\"+ht+\\\\\\\"px\\\\\\\";\\\\n    \\\\n    var lst = document.getElementById(args[0]);\\\\n    if(lst.childNodes.length === 60) lst.removeChild(lst.childNodes[0]);\\\\n    lst.appendChild(l);\\\\n    \\\\n    var val = document.getElementById(args[1]);\\\\n    val.innerHTML = \\\\\\\"\\\\\\\"+args[2]+\\\\\\\" keystrokes per second\\\\\\\";\\\\n  }@ )\\\\n  \\\\n  (_def displayMax @{\\\\n    var col = \\\\\\\"#333\\\\\\\";\\\\n    if (args[1] >= 2) col = \\\\\\\"blue\\\\\\\";\\\\n    if (args[1] >= 5) col = \\\\\\\"darkgreen\\\\\\\";\\\\n    if (args[1] >= 8) col = \\\\\\\"orangered\\\\\\\";\\\\n    document.getElementById(args[0]).innerHTML = \\\\\\\"<b style='color:\\\\\\\" + col + \\\\\\\"'>\\\\\\\" + args[1] + \\\\\\\" keystrokes per second\\\\\\\";\\\\n  }@)\\\\n\\\\n  (_def keystrokes-viewer @{\\\\n    var l = document.createElement('li');\\\\n    var lst = document.getElementById(args[0]);\\\\n    l.style.background = args[1];\\\\n    if(lst.childNodes.length === 600) lst.removeChild(lst.childNodes[0]);\\\\n    lst.appendChild(l);\\\\n  }@)\\\\n\\\\n  (_def typeStream (_stream attach-event \\\\\\\"typing-area\\\\\\\" \\\\\\\"keyup\\\\\\\") ) \\\\n  (_def typeCountStream (count-stream typeStream) ) \\\\n \\\\n  (_def msStream (_stream miliseconds 50))\\\\n  (_def secStream (_stream seconds 1) )\\\\n  \\\\n  (_def secCount (_on secStream (_pull typeCountStream) ) )\\\\n  (_def delayedSecCount (delay-stream 1 secCount) )\\\\n  \\\\n  (_def diff-stream (_on delayedSecCount (- (_pull secCount) (_pull delayedSecCount) ) ) )\\\\n  \\\\n  (_do (_on diff-stream (speed-graph \\\\\\\"speed-viewer\\\\\\\" \\\\\\\"echo-area\\\\\\\" (_pull diff-stream) ) ) )\\\\n \\\\n  (_def ksStream (_on msStream (_pull typeCountStream) ) )\\\\n  (_def dksStream (delay-stream 1 ksStream) )\\\\n  \\\\n  (_def kdStream (_on dksStream (- (_pull ksStream) (_pull dksStream) ) ) )\\\\n  (_def colStream (_on kdStream (_if (_pull kdStream) \\\\\\\"#555\\\\\\\" \\\\\\\"transparent\\\\\\\") ) )\\\\n  (_do (_on colStream (keystrokes-viewer \\\\\\\"keystrokes-viewer\\\\\\\" (_pull colStream) ) ) )\\\\n \\\\n  \\\\n  \\\\n  (_def maxStream (max-stream diff-stream) )\\\\n  (_do (_on maxStream (displayMax \\\\\\\"max-area\\\\\\\" (_pull maxStream) ) ) )\\\\n  \\\\n  [debug log stream on console maxStream] \\\\n \\\"}]}]}\"}");
